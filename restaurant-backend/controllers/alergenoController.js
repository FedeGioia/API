const Alergeno = require('../models/Alergeno');

// Obtener todos los al√©rgenos
const obtenerAlergenos = async (req, res) => {
  try {
    console.log('üìã Obteniendo lista de al√©rgenos...');
    
    const alergenos = await Alergeno.findAll({
      order: [['nombre', 'ASC']]
    });
    
    console.log(`‚úÖ Se encontraron ${alergenos.length} al√©rgenos`);
    
    // Asegurar que siempre retornemos un array
    const alergenosArray = Array.isArray(alergenos) ? alergenos : [];
    res.json(alergenosArray);
  } catch (error) {
    console.error('‚ùå Error al obtener al√©rgenos:', error);
    // En caso de error, devolver un array vac√≠o para evitar errores en el frontend
    res.status(200).json([]);
  }
};

// Crear un nuevo al√©rgeno
const crearAlergeno = async (req, res) => {
  try {
    const { nombre } = req.body;
    
    console.log('üìù Creando nuevo al√©rgeno:', { nombre });
    
    // Validar datos requeridos
    if (!nombre) {
      return res.status(400).json({ message: 'El nombre del al√©rgeno es requerido' });
    }
    
    // Verificar si ya existe un al√©rgeno con ese nombre
    const alergenoExistente = await Alergeno.findOne({ where: { nombre } });
    if (alergenoExistente) {
      return res.status(400).json({ message: 'Ya existe un al√©rgeno con ese nombre' });
    }
    
    const nuevoAlergeno = await Alergeno.create({ nombre });
    
    console.log('‚úÖ Al√©rgeno creado:', nuevoAlergeno.toJSON());
    
    res.status(201).json(nuevoAlergeno);
  } catch (error) {
    console.error('‚ùå Error al crear al√©rgeno:', error);
    res.status(500).json({ 
      message: 'Error al crear al√©rgeno', 
      error: error.message 
    });
  }
};

// Obtener un al√©rgeno por ID
const obtenerAlergenoPorId = async (req, res) => {
  try {
    const { id } = req.params;
    
    console.log('üîç Buscando al√©rgeno con ID:', id);
    
    const alergeno = await Alergeno.findByPk(id);
    
    if (!alergeno) {
      return res.status(404).json({ message: 'Al√©rgeno no encontrado' });
    }
    
    console.log('‚úÖ Al√©rgeno encontrado:', alergeno.toJSON());
    
    res.json(alergeno);
  } catch (error) {
    console.error('‚ùå Error al obtener al√©rgeno:', error);
    res.status(500).json({ 
      message: 'Error al obtener al√©rgeno', 
      error: error.message 
    });
  }
};

// Actualizar un al√©rgeno
const actualizarAlergeno = async (req, res) => {
  try {
    const { id } = req.params;
    const { nombre } = req.body;
    
    console.log('‚úèÔ∏è Actualizando al√©rgeno:', { id, nombre });
    
    const alergeno = await Alergeno.findByPk(id);
    
    if (!alergeno) {
      return res.status(404).json({ message: 'Al√©rgeno no encontrado' });
    }
    
    // Verificar si ya existe otro al√©rgeno con ese nombre
    const alergenoExistente = await Alergeno.findOne({ 
      where: { nombre },
      where: { id: { [require('sequelize').Op.ne]: id } }
    });
    
    if (alergenoExistente) {
      return res.status(400).json({ message: 'Ya existe un al√©rgeno con ese nombre' });
    }
    
    await alergeno.update({ nombre });
    
    console.log('‚úÖ Al√©rgeno actualizado:', alergeno.toJSON());
    
    res.json(alergeno);
  } catch (error) {
    console.error('‚ùå Error al actualizar al√©rgeno:', error);
    res.status(500).json({ 
      message: 'Error al actualizar al√©rgeno', 
      error: error.message 
    });
  }
};

// Eliminar un al√©rgeno
const eliminarAlergeno = async (req, res) => {
  try {
    const { id } = req.params;
    
    console.log('üóëÔ∏è Eliminando al√©rgeno con ID:', id);
    
    const alergeno = await Alergeno.findByPk(id);
    
    if (!alergeno) {
      return res.status(404).json({ message: 'Al√©rgeno no encontrado' });
    }
    
    await alergeno.destroy();
    
    console.log('‚úÖ Al√©rgeno eliminado correctamente');
    
    res.json({ message: 'Al√©rgeno eliminado correctamente' });
  } catch (error) {
    console.error('‚ùå Error al eliminar al√©rgeno:', error);
    res.status(500).json({ 
      message: 'Error al eliminar al√©rgeno', 
      error: error.message 
    });
  }
};

module.exports = {
  obtenerAlergenos,
  crearAlergeno,
  obtenerAlergenoPorId,
  actualizarAlergeno,
  eliminarAlergeno
};
